name: Full Build & Test

on:
  push:
    tags: [ "*" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.repository_id }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  full_build_and_test:
    strategy:
      matrix:
        target:
          - target: "x86_64-unknown-linux-gnu"

          - target: "x86_64-unknown-linux-musl"

          - target: "x86_64-linux-android"

          - target: "x86_64-unknown-freebsd"
            no_test: true

          - target: "x86_64-unknown-netbsd"
            no_test: true

          - target: "i686-unknown-linux-gnu"

          - target: "i686-unknown-linux-musl"

          - target: "i686-linux-android"

          - target: "i686-unknown-freebsd"
            no_test: true

          - target: "aarch64-unknown-linux-gnu"

          - target: "aarch64-unknown-linux-musl"

          - target: "aarch64-linux-android"

          - target: "armv7-unknown-linux-gnueabihf"

          - target: "armv7-unknown-linux-gnueabi"

          - target: "armv7-unknown-linux-musleabihf"

          - target: "armv7-unknown-linux-musleabi"

          - target: "armv7-linux-androideabi"

          - target: "x86_64-pc-windows-gnu"

          - target: "x86_64-pc-windows-gnullvm"

          - os: windows-2025
            toolchain: "x86_64-pc-windows-msvc"
            target: "x86_64-pc-windows-msvc"

          - target: "i686-pc-windows-gnu"

          - target: "i686-pc-windows-gnullvm"

          - os: windows-2025
            toolchain: "x86_64-pc-windows-msvc"
            target: "i686-pc-windows-msvc"

          - target: "aarch64-pc-windows-gnullvm"

          - os: windows-11-arm
            toolchain: "aarch64-pc-windows-msvc"
            target: "aarch64-pc-windows-msvc"

          - os: macos-15
            toolchain: "aarch64-apple-darwin"
            target: "x86_64-apple-darwin"

          - os: macos-15
            toolchain: "aarch64-apple-darwin"
            target: "aarch64-apple-darwin"

        toolchain_version:
          - "stable"
          - "nightly"

      fail-fast: false

    name: Build & Test ${{ matrix.target.target }} (${{ matrix.toolchain_version || 'stable' }})
    runs-on: ${{ matrix.target.os || 'ubuntu-24.04' }}
    permissions:
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Why does Windows aarch64 not come with rustup
        if: ${{ matrix.target.os == 'windows-11-arm' }}
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://static.rust-lang.org/rustup/dist/${{ matrix.target.toolchain || 'x86_64-unknown-linux-gnu' }}/rustup-init.exe" -Outfile "C:\temp\rustup-init.exe"
          & "C:\temp\rustup-init.exe" -y
          Write-Output "$env:USERPROFILE\.cargo\bin" | Out-File -Append -Encoding utf8 $env:GITHUB_PATH

      - name: Install Rust
        run: |
          rustup toolchain install ${{ matrix.toolchain_version || 'stable' }}-${{ matrix.target.toolchain || 'x86_64-unknown-linux-gnu' }} --profile default --allow-downgrade
          rustup default ${{ matrix.toolchain_version || 'stable' }}-${{ matrix.target.toolchain || 'x86_64-unknown-linux-gnu' }}

      - name: Install cross-toolchain
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target.target }}

      - name: Build
        run: |
          cargo build --target ${{ matrix.target.target }} --release

      - name: Test
        if: ${{ !matrix.target.no_test }}
        run: |
          cargo test --target ${{ matrix.target.target }} --release
